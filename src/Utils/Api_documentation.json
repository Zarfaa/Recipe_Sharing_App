{
  "openapi": "3.0.0",
  "info": {
    "title": "Recipe Sharing App",
    "description": "Backend for Recipe Sharing App including CRUD and JWT authentication",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000/"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Authenticate user",
        "description": "Endpoint to authenticate a user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email address."
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password."
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "Assesments/Assesment-2/src/Modal/Auth.js"
                        },
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User Not Found"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Invalid Email or password"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "summary": "Register a new user",
        "description": "Endpoint to register a new user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address."
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password."
                  },
                  "DateOfBirth": {
                    "type": "string",
                    "format": "date",
                    "description": "User's date of birth (YYYY-MM-DD)."
                  },
                  "Gender": {
                    "type": "string",
                    "description": "User's gender."
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "user",
                      "admin"
                    ],
                    "description": "User's role (user or admin)."
                  },
                  "contactNumber": {
                    "type": "string",
                    "description": "User's contact number."
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password",
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "DateOfBirth": {
                          "type": "string"
                        },
                        "Gender": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "contactNumber": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Email Already Registered"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/login": {
      "post": {
        "summary": "Login as admin",
        "description": "Endpoint to login as an admin user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Admin's email address."
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "Assesments/Assesment-2/src/Modal/User.js"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin Not Exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/": {
      "get": {
        "summary": "Get all Users",
        "description": "Endpoint to get all the registered Users.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/admin/{id}": {
      "put": {
        "summary": "Edit user by ID",
        "description": "Endpoint to edit a user's role by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the user to edit",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "New role of the user."
                  }
                },
                "required": [
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "Assesments/Assesment-2/src/Modal/User.js"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "summary": "Get User by ID",
        "description": "Endpoint to get a user by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the user to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Assesments/Assesment-2/src/Modal/User.js"
                }
              }
            }
          },
          "404": {
            "description": "User Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete User by ID",
        "description": "Endpoint to delete a user by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the user to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Assesments/Assesment-2/src/Modal/User.js"
                }
              }
            }
          },
          "404": {
            "description": "User Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}": {
      "put": {
        "summary": "Update user profile by ID",
        "description": "Endpoint to update a user's profile by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the user to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's updated email address."
                  },
                  "name": {
                    "type": "string",
                    "description": "User's updated name."
                  },
                  "password": {
                    "type": "string",
                    "description": "User's updated password."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "summary": "Get user y ID",
        "description": "Endpoint to Get details of a user",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/user/recipes/{id}": {
      "get": {
        "summary": "Get all recipes by a user",
        "description": "Endpoint to Get all recipes by a user",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/recipe/": {
      "get": {
        "summary": "Get all recipes",
        "description": "Endpoint to get all recipes.",
        "responses": {
          "default": {
            "description": "Successful operation"
          }
        }
      },
      "post": {
        "summary": "Create a new recipe",
        "description": "Endpoint to create a new recipe.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the recipe."
                  },
                  "category": {
                    "type": "string",
                    "description": "Category of the recipe."
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of ingredients for the recipe."
                  },
                  "image": {
                    "type": "string",
                    "description": "URL of the recipe's image."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the recipe."
                  },
                  "steps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of steps to prepare the recipe."
                  }
                },
                "required": [
                  "name",
                  "category",
                  "ingredients",
                  "image",
                  "description",
                  "steps"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recipe added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Recipe"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete a recipe by ID",
        "description": "Endpoint to delete a recipe by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the recipe to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe deleted successfully"
          },
          "404": {
            "description": "Recipe Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update a recipe by ID",
        "description": "Endpoint to update a recipe by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the recipe to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the recipe."
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of ingredients for the recipe."
                  },
                  "image": {
                    "type": "string",
                    "description": "URL of the recipe's image."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the recipe."
                  }
                },
                "required": [
                  "name",
                  "ingredients",
                  "image",
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recipe updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Recipe"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },   "/recipe/{id}": {
      "get": {
        "summary": "Get a recipe by ID",
        "description": "Endpoint to get a recipe by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the recipe to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe retrieved successfully"
          },
          "404": {
            "description": "Recipe Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer"
        }
      }
    }
  }
}